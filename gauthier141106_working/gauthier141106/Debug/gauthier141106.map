Archive member included because of file (symbol)

c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
                              c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o (exit)
c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
                              gauthier141106.o (__do_clear_bss)

Discarded input sections

 .bss           0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o
 .text          0x00000000        0x0 gauthier141106.o
 .bss           0x00000000        0x0 gauthier141106.o
 .text          0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o
LOAD gauthier141106.o
START GROUP
LOAD c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack\libm.a
END GROUP
LOAD c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a
LOAD c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack\libc.a
LOAD c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x35c
 *(.vectors)
 .vectors       0x00000000       0x26 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0x8 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000002e       0x10 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
                0x0000002e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000003e        0x4 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x00000042        0x2 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o
                0x00000042                __vector_1
                0x00000042                __vector_12
                0x00000042                __bad_interrupt
                0x00000042                __vector_6
                0x00000042                __vector_3
                0x00000042                __vector_11
                0x00000042                __vector_13
                0x00000042                __vector_17
                0x00000042                __vector_7
                0x00000042                __vector_5
                0x00000042                __vector_4
                0x00000042                __vector_9
                0x00000042                __vector_2
                0x00000042                __vector_15
                0x00000042                __vector_8
                0x00000042                __vector_14
                0x00000042                __vector_10
                0x00000042                __vector_16
                0x00000042                __vector_18
                0x00000044                . = ALIGN (0x2)
 *(.text.*)
 .text.estop.part.0
                0x00000044        0x4 gauthier141106.o
 .text.estop    0x00000048        0x8 gauthier141106.o
                0x00000048                estop
 .text.buzzz    0x00000050       0x26 gauthier141106.o
                0x00000050                buzzz
 .text.leds.part.1
                0x00000076       0x7e gauthier141106.o
 .text.leds     0x000000f4       0x4a gauthier141106.o
                0x000000f4                leds
 .text.startup.main
                0x0000013e      0x21a gauthier141106.o
                0x0000013e                main
                0x00000358                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000358        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
                0x00000358                _exit
                0x00000358                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000358        0x4 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 *(.fini0)
                0x0000035c                _etext = .

.data           0x00800060        0x0 load address 0x0000035c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o
 .data          0x00800060        0x0 gauthier141106.o
 .data          0x00800060        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr25/tiny-stack\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0xe
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.rounds    0x00800060        0x2 gauthier141106.o
                0x00800060                rounds
 .bss.move_z    0x00800062        0x1 gauthier141106.o
                0x00800062                move_z
 .bss.move_y    0x00800063        0x1 gauthier141106.o
                0x00800063                move_y
 .bss.move_x    0x00800064        0x1 gauthier141106.o
                0x00800064                move_x
 .bss.cnt_z     0x00800065        0x1 gauthier141106.o
                0x00800065                cnt_z
 .bss.cnt_y     0x00800066        0x1 gauthier141106.o
                0x00800066                cnt_y
 .bss.cnt_x     0x00800067        0x1 gauthier141106.o
                0x00800067                cnt_x
 .bss.ist_z     0x00800068        0x1 gauthier141106.o
                0x00800068                ist_z
 .bss.ist_y     0x00800069        0x1 gauthier141106.o
                0x00800069                ist_y
 .bss.ist_x     0x0080006a        0x1 gauthier141106.o
                0x0080006a                ist_x
 .bss.soll_z    0x0080006b        0x1 gauthier141106.o
                0x0080006b                soll_z
 .bss.soll_y    0x0080006c        0x1 gauthier141106.o
                0x0080006c                soll_y
 .bss.soll_x    0x0080006d        0x1 gauthier141106.o
                0x0080006d                soll_x
 *(COMMON)
                0x0080006e                PROVIDE (__bss_end, .)
                0x0000035c                __data_load_start = LOADADDR (.data)
                0x0000035c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006e        0x0
                0x0080006e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006e                PROVIDE (__noinit_end, .)
                0x0080006e                _end = .
                0x0080006e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6b4
 *(.stab)
 .stab          0x00000000      0x6b4 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/programme/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr25/tiny-stack/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f gauthier141106.o
                                 0x30 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x48
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x48 gauthier141106.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x6a5
 *(.debug_info)
 .debug_info    0x00000000      0x6a5 gauthier141106.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x1f2
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1f2 gauthier141106.o

.debug_line     0x00000000      0x33c
 *(.debug_line)
 .debug_line    0x00000000      0x33c gauthier141106.o

.debug_frame    0x00000000       0x84
 *(.debug_frame)
 .debug_frame   0x00000000       0x84 gauthier141106.o

.debug_str      0x00000000      0x1ad
 *(.debug_str)
 .debug_str     0x00000000      0x1ad gauthier141106.o
                                0x1e8 (size before relaxing)

.debug_loc      0x00000000      0x310
 *(.debug_loc)
 .debug_loc     0x00000000      0x310 gauthier141106.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x38
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x38 gauthier141106.o

.debug_macro
 *(.debug_macro)
OUTPUT(gauthier141106.elf elf32-avr)
LOAD linker stubs
